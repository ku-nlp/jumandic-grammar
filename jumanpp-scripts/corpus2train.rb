#! ruby -Ku
# coding: utf-8 
#

require 'rubygems'
require 'optparse'

OPTS = {}
OPTS[:poschange]=false
opt= OptionParser.new

opt.on('-t'){|v| OPTS[:test]=v}
opt.on('-b'){|v| OPTS[:base]=v}
opt.on('-i'){|v| OPTS[:id]=v}
opt.on('--disablePOSchange'){OPTS[:poschange]=false}
opt.on('--enablePOSchange'){OPTS[:poschange]=true}
opt.parse!(ARGV)

# 品詞-品詞id のマップ

Hash pos_map = {#{{{
    0 => "*", 1 => "特殊", 2 => "動詞", 3 => "形容詞", 4 => "判定詞", 5 => "助動詞", 6 => "名詞", 7 => "指示詞", 8 => "副詞", 9 => "助詞", 10=> "接続詞", 11=> "連体詞", 12=> "感動詞", 13=> "接頭辞", 14=> "接尾辞", 15=> "未定義語"}
#}}}
Hash spos_map = {#{{{
    # 特殊 1
    1 => { 0  => "*",
           1  => "句点",
           2  => "読点",
           3  => "括弧始",
           4  => "括弧終",
           5  => "記号",
           6  => "空白"},
    # 名詞 6
    6 => { 0  => "*",
           1  => "普通名詞",
           2  => "サ変名詞",
           3  => "固有名詞",
           4  => "地名",
           5  => "人名",
           6  => "組織名",
           7  => "数詞",
           8  => "形式名詞",
           9  => "副詞的名詞",
           10 => "時相名詞" },
    # 指示詞 7
    7 => { 0  => "*",
           1  => "名詞形態指示詞",
           2  => "連体詞形態指示詞",
           3  => "副詞形態指示詞"},

    # 助詞 9
    9 => { 0  => "*",
           1  => "格助詞",
           2  => "副助詞",
           3  => "接続助詞",
           4  => "終助詞"},

    # 接頭辞 13
    13 => { 0  => "*",
            1  => "名詞接頭辞",
            2  => "動詞接頭辞",
            3  => "イ形容詞接頭辞",
            4  => "ナ形容詞接頭辞"},
    # 接尾辞 14
    14 =>{ 0  => "*",
           1  => "名詞性述語接尾辞",
           2  => "名詞性名詞接尾辞",
           3  => "名詞性名詞助数辞",
           4  => "名詞性特殊接尾辞",
           5  => "形容詞性述語接尾辞",
           6  => "形容詞性名詞接尾辞",
           7  => "動詞性接尾辞"},
    # 未定義語 15
    15 =>{ 0  => "*",
           1  => "その他",
           2  => "カタカナ",
           3  => "アルファベット"}
}#}}}
Hash katuyou_type_map = { #{{{
0  => "*", 1  => "母音動詞", 2  => "子音動詞カ行", 3  => "子音動詞カ行促音便形", 4  => "子音動詞ガ行", 5  => "子音動詞サ行", 6  => "子音動詞タ行", 7  => "子音動詞ナ行", 8  => "子音動詞バ行", 9  => "子音動詞マ行", 10 => "子音動詞ラ行", 11 => "子音動詞ラ行イ形", 12 => "子音動詞ワ行", 13 => "子音動詞ワ行文語音便形", 14 => "カ変動詞", 15 => "カ変動詞来", 16 => "サ変動詞", 17 => "ザ変動詞", 18 => "イ形容詞アウオ段", 19 => "イ形容詞イ段", 20 => "イ形容詞イ段特殊", 21 => "ナ形容詞", 22 => "ナノ形容詞", 23 => "ナ形容詞特殊", 24 => "タル形容詞", 25 => "判定詞", 26 => "無活用型", 27 => "助動詞ぬ型", 28 => "助動詞だろう型", 29 => "助動詞そうだ型", 30 => "助動詞く型", 31 => "動詞性接尾辞ます型", 32 => "動詞性接尾辞うる型"} #}}}
Hash katuyou_form_map = {#{{{
# ない場合は0
0 => { 0 => "*"},
#母音動詞
1=>{ 1=>"語幹", 2=>"基本形", 3=>"未然形", 4=>"意志形", 5=>"省略意志形", 6=>"命令形", 7=>"基本条件形", 8=>"基本連用形", 9=>"タ接連用形", 10=>"タ形", 11=>"タ系推量形", 12=>"タ系省略推量形", 13=>"タ系条件形", 14=>"タ系連用テ形", 15=>"タ系連用タリ形", 16=>"タ系連用チャ形", 17=>"音便条件形", 18=>"文語命令形"},
2=>{ 1 => "語幹", 2 => "基本形", 3 => "未然形", 4 => "意志形", 5 => "省略意志形", 6 => "命令形", 7 => "基本条件形", 8 => "基本連用形", 9 => "タ接連用形", 10 => "タ形", 11 => "タ系推量形", 12 => "タ系省略推量形", 13 => "タ系条件形", 14 => "タ系連用テ形", 15 => "タ系連用タリ形", 16 => "タ系連用チャ形", 17 => "音便条件形"},
3=>{ 1 => "語幹", 2 => "基本形", 3 => "未然形", 4 => "意志形", 5 => "省略意志形", 6 => "命令形", 7 => "基本条件形", 8 => "基本連用形", 9 => "タ接連用形", 10 => "タ形", 11 => "タ系推量形", 12 => "タ系省略推量形", 13 => "タ系条件形", 14 => "タ系連用テ形", 15 => "タ系連用タリ形", 16 => "タ系連用チャ形", 17 => "音便条件形"},
4=>{ 1 => "語幹", 2 => "基本形", 3 => "未然形", 4 => "意志形", 5 => "省略意志形", 6 => "命令形", 7 => "基本条件形", 8 => "基本連用形", 9 => "タ接連用形", 10 => "タ形", 11 => "タ系推量形", 12 => "タ系省略推量形", 13 => "タ系条件形", 14 => "タ系連用テ形", 15 => "タ系連用タリ形", 16 => "タ系連用チャ形", 17 => "音便条件形"},
5=>{ 1 => "語幹", 2 => "基本形", 3 => "未然形", 4 => "意志形", 5 => "省略意志形", 6 => "命令形", 7 => "基本条件形", 8 => "基本連用形", 9 => "タ接連用形", 10 => "タ形", 11 => "タ系推量形", 12 => "タ系省略推量形", 13 => "タ系条件形", 14 => "タ系連用テ形", 15 => "タ系連用タリ形", 16 => "タ系連用チャ形", 17 => "音便条件形"},
6=>{ 1 => "語幹", 2 => "基本形", 3 => "未然形", 4 => "意志形", 5 => "省略意志形", 6 => "命令形", 7 => "基本条件形", 8 => "基本連用形", 9 => "タ接連用形", 10 => "タ形", 11 => "タ系推量形", 12 => "タ系省略推量形", 13 => "タ系条件形", 14 => "タ系連用テ形", 15 => "タ系連用タリ形", 16 => "タ系連用チャ形", 17 => "音便条件形"},
7=>{ 1 => "語幹", 2 => "基本形", 3 => "未然形", 4 => "意志形", 5 => "省略意志形", 6 => "命令形", 7 => "基本条件形", 8 => "基本連用形", 9 => "タ接連用形", 10 => "タ形", 11 => "タ系推量形", 12 => "タ系省略推量形", 13 => "タ系条件形", 14 => "タ系連用テ形", 15 => "タ系連用タリ形", 16 => "タ系連用チャ形", 17 => "音便条件形"},
8=>{ 1 => "語幹", 2 => "基本形", 3 => "未然形", 4 => "意志形", 5 => "省略意志形", 6 => "命令形", 7 => "基本条件形", 8 => "基本連用形", 9 => "タ接連用形", 10 => "タ形", 11 => "タ系推量形", 12 => "タ系省略推量形", 13 => "タ系条件形", 14 => "タ系連用テ形", 15 => "タ系連用タリ形", 16 => "タ系連用チャ形", 17 => "音便条件形"},
9=>{ 1 => "語幹", 2 => "基本形", 3 => "未然形", 4 => "意志形", 5 => "省略意志形", 6 => "命令形", 7 => "基本条件形", 8 => "基本連用形", 9 => "タ接連用形", 10 => "タ形", 11 => "タ系推量形", 12 => "タ系省略推量形", 13 => "タ系条件形", 14 => "タ系連用テ形", 15 => "タ系連用タリ形", 16 => "タ系連用チャ形", 17 => "音便条件形"},
10=>{ 1 => "語幹", 2 => "基本形", 3 => "未然形", 4 => "意志形", 5 => "省略意志形", 6 => "命令形", 7 => "基本条件形", 8 => "基本連用形", 9 => "タ接連用形", 10 => "タ形", 11 => "タ系推量形", 12 => "タ系省略推量形", 13 => "タ系条件形", 14 => "タ系連用テ形", 15 => "タ系連用タリ形", 16 => "タ系連用チャ形", 17 => "音便条件形"},
11=>{ 1 => "語幹", 2 => "基本形", 3 => "未然形", 4 => "意志形", 5 => "省略意志形", 6 => "命令形", 7 => "基本条件形", 8 => "基本連用形", 9 => "タ接連用形", 10 => "タ形", 11 => "タ系推量形", 12 => "タ系省略推量形", 13 => "タ系条件形", 14 => "タ系連用テ形", 15 => "タ系連用タリ形", 16 => "タ系連用チャ形", 17 => "音便条件形"}, 
12=>{ 1 => "語幹", 2 => "基本形", 3 => "未然形", 4 => "意志形", 5 => "省略意志形", 6 => "命令形", 7 => "基本条件形", 8 => "基本連用形", 9 => "タ接連用形", 10 => "タ形", 11 => "タ系推量形", 12 => "タ系省略推量形", 13 => "タ系条件形", 14 => "タ系連用テ形", 15 => "タ系連用タリ形", 16 => "タ系連用チャ形"}, 
13=>{ 1 => "語幹", 2 => "基本形", 3 => "未然形", 4 => "意志形", 5 => "省略意志形", 6 => "命令形", 7 => "基本条件形", 8 => "基本連用形", 9 => "タ接連用形", 10 => "タ形", 11 => "タ系推量形", 12 => "タ系省略推量形", 13 => "タ系条件形", 14 => "タ系連用テ形", 15 => "タ系連用タリ形", 16 => "タ系連用チャ形"}, 
14=>{ 1 => "語幹", 2 => "基本形", 3 => "未然形", 4 => "意志形", 5 => "省略意志形", 6 => "命令形", 7 => "基本条件形", 8 => "基本連用形", 9 => "タ接連用形", 10 => "タ形", 11 => "タ系推量形", 12 => "タ系省略推量形", 13 => "タ系条件形", 14 => "タ系連用テ形", 15 => "タ系連用タリ形", 16 => "タ系連用チャ形", 17 => "音便条件形"},
15=>{ 1 => "語幹", 2 => "基本形", 3 => "未然形", 4 => "意志形", 5 => "省略意志形", 6 => "命令形", 7 => "基本条件形", 8 => "基本連用形", 9 => "タ接連用形", 10 => "タ形", 11 => "タ系推量形", 12 => "タ系省略推量形", 13 => "タ系条件形", 14 => "タ系連用テ形", 15 => "タ系連用タリ形", 16 => "タ系連用チャ形", 17 => "音便条件形"}, 
16=>{ 1 => "語幹", 2 => "基本形", 3 => "未然形", 4 => "意志形", 5 => "省略意志形", 6 => "命令形", 7 => "基本条件形", 8 => "基本連用形", 9 => "タ接連用形", 10 => "タ形", 11 => "タ系推量形", 12 => "タ系省略推量形", 13 => "タ系条件形", 14 => "タ系連用テ形", 15 => "タ系連用タリ形", 16 => "タ系連用チャ形", 17 => "音便条件形", 18 => "文語基本形", 19 => "文語未然形", 20 => "文語命令形"},
17=>{ 1 => "語幹", 2 => "基本形", 3 => "未然形", 4 => "意志形", 5 => "省略意志形", 6 => "命令形", 7 => "基本条件形", 8 => "基本連用形", 9 => "タ接連用形", 10 => "タ形", 11 => "タ系推量形", 12 => "タ系省略推量形", 13 => "タ系条件形", 14 => "タ系連用テ形", 15 => "タ系連用タリ形", 16 => "タ系連用チャ形", 17 => "音便条件形", 18 => "文語基本形", 19 => "文語未然形", 20 => "文語命令形"},
18=>{ 1 => "語幹", 2 => "基本形", 3 => "命令形", 4 => "基本推量形", 5 => "基本省略推量形", 6 => "基本条件形", 7 => "基本連用形", 8 => "タ形", 9 => "タ系推量形", 10 => "タ系省略推量形", 11 => "タ系条件形", 12 => "タ系連用テ形", 13 => "タ系連用タリ形", 14 => "タ系連用チャ形", 15 => "タ系連用チャ形２", 16 => "音便条件形", 17 => "音便条件形２", 18 => "文語基本形", 19 => "文語未然形", 20 => "文語連用形", 21 => "文語連体形", 22 => "文語命令形", 23 => "エ基本形"}, 
19=>{ 1 => "語幹", 2 => "基本形", 3 => "命令形", 4 => "基本推量形", 5 => "基本省略推量形", 6 => "基本条件形", 7 => "基本連用形", 8 => "タ形", 9 => "タ系推量形", 10 => "タ系省略推量形", 11 => "タ系条件形", 12 => "タ系連用テ形", 13 => "タ系連用タリ形", 14 => "タ系連用チャ形", 15 => "タ系連用チャ形２", 16 => "音便条件形", 17 => "音便条件形２", 18 => "文語基本形", 19 => "文語未然形", 20 => "文語連用形", 21 => "文語連体形", 22 => "文語命令形", 23 => "エ基本形"},
20=>{ 1 => "語幹", 2 => "基本形", 3 => "命令形", 4 => "基本推量形", 5 => "基本省略推量形", 6 => "基本条件形", 7 => "基本連用形", 8 => "タ形", 9 => "タ系推量形", 10 => "タ系省略推量形", 11 => "タ系条件形", 12 => "タ系連用テ形", 13 => "タ系連用タリ形", 14 => "タ系連用チャ形", 15 => "タ系連用チャ形２", 16 => "音便条件形", 17 => "音便条件形２", 18 => "文語基本形", 19 => "文語未然形", 20 => "文語連用形", 21 => "文語連体形", 22 => "文語命令形", 23 => "エ基本形"},
21=>{ 1 => "語幹", 2 => "基本形", 3 => "ダ列基本連体形", 4 => "ダ列基本推量形", 5 => "ダ列基本省略推量形", 6 => "ダ列基本条件形", 7 => "ダ列基本連用形", 8 => "ダ列タ形", 9 => "ダ列タ系推量形", 10 => "ダ列タ系省略推量形", 11 => "ダ列タ系条件形", 12 => "ダ列タ系連用テ形", 13 => "ダ列タ系連用タリ形", 14 => "ダ列タ系連用ジャ形", 15 => "ダ列文語連体形", 16 => "ダ列文語条件形", 17 => "デアル列基本形", 18 => "デアル列命令形", 19 => "デアル列基本推量形", 20 => "デアル列基本省略推量形", 21 => "デアル列基本条件形", 22 => "デアル列基本連用形", 23 => "デアル列タ形", 24 => "デアル列タ系推量形", 25 => "デアル列タ系省略推量形", 26 => "デアル列タ系条件形", 27 => "デアル列タ系連用テ形", 28 => "デアル列タ系連用タリ形", 29 => "デス列基本形", 30 => "デス列基本推量形", 31 => "デス列基本省略推量形", 32 => "デス列タ形", 33 => "デス列タ系推量形", 34 => "デス列タ系省略推量形", 35 => "デス列タ系条件形", 36 => "デス列タ系連用テ形", 37 => "デス列タ系連用タリ形", 38 => "ヤ列基本形", 39 => "ヤ列基本推量形", 40 => "ヤ列基本省略推量形", 41 => "ヤ列タ形", 42 => "ヤ列タ系推量形", 43 => "ヤ列タ系省略推量形", 44 => "ヤ列タ系条件形", 45 => "ヤ列タ系連用タリ形"},
22=>{ 1 => "語幹", 2 => "基本形", 3 => "ダ列基本連体形", 4 => "ダ列特殊連体形", 5 => "ダ列基本推量形", 6 => "ダ列基本省略推量形", 7 => "ダ列基本条件形", 8 => "ダ列基本連用形", 9 => "ダ列タ形", 10 => "ダ列タ系推量形", 11 => "ダ列タ系省略推量形", 12 => "ダ列タ系条件形", 13 => "ダ列タ系連用テ形", 14 => "ダ列タ系連用タリ形", 15 => "ダ列タ系連用ジャ形", 16 => "ダ列文語連体形", 17 => "ダ列文語条件形", 18 => "デアル列基本形", 19 => "デアル列命令形", 20 => "デアル列基本推量形", 21 => "デアル列基本省略推量形", 22 => "デアル列基本条件形", 23 => "デアル列基本連用形", 24 => "デアル列タ形", 25 => "デアル列タ系推量形", 26 => "デアル列タ系省略推量形", 27 => "デアル列タ系条件形", 28 => "デアル列タ系連用テ形", 29 => "デアル列タ系連用タリ形", 30 => "デス列基本形", 31 => "デス列基本推量形", 32 => "デス列基本省略推量形", 33 => "デス列タ形", 34 => "デス列タ系推量形", 35 => "デス列タ系省略推量形", 36 => "デス列タ系条件形", 37 => "デス列タ系連用テ形", 38 => "デス列タ系連用タリ形", 39 => "ヤ列基本形", 40 => "ヤ列基本推量形", 41 => "ヤ列基本省略推量形", 42 => "ヤ列タ形", 43 => "ヤ列タ系推量形", 44 => "ヤ列タ系省略推量形", 45 => "ヤ列タ系条件形", 46 => "ヤ列タ系連用タリ形"},
23=>{ 1 => "語幹", 2 => "基本形", 3 => "ダ列基本連体形", 4 => "ダ列特殊連体形", 5 => "ダ列基本推量形", 6 => "ダ列基本省略推量形", 7 => "ダ列基本条件形", 8 => "ダ列基本連用形", 9 => "ダ列特殊連用形", 10 => "ダ列タ形", 11 => "ダ列タ系推量形", 12 => "ダ列タ系省略推量形", 13 => "ダ列タ系条件形", 14 => "ダ列タ系連用テ形", 15 => "ダ列タ系連用タリ形", 16 => "ダ列タ系連用ジャ形", 17 => "ダ列文語連体形", 18 => "ダ列文語条件形", 19 => "デアル列基本形", 20 => "デアル列命令形", 21 => "デアル列基本推量形", 22 => "デアル列基本省略推量形", 23 => "デアル列基本条件形", 24 => "デアル列基本連用形", 25 => "デアル列タ形", 26 => "デアル列タ系推量形", 27 => "デアル列タ系省略推量形", 28 => "デアル列タ系条件形", 29 => "デアル列タ系連用テ形", 30 => "デアル列タ系連用タリ形", 31 => "デス列基本形", 32 => "デス列基本推量形", 33 => "デス列基本省略推量形", 34 => "デス列タ形", 35 => "デス列タ系推量形", 36 => "デス列タ系省略推量形", 37 => "デス列タ系条件形", 38 => "デス列タ系連用テ形", 39 => "デス列タ系連用タリ形", 40 => "ヤ列基本形", 41 => "ヤ列基本推量形", 42 => "ヤ列基本省略推量形", 43 => "ヤ列タ形", 44 => "ヤ列タ系推量形", 45 => "ヤ列タ系省略推量形", 46 => "ヤ列タ系条件形", 47 => "ヤ列タ系連用タリ形"},
24=>{ 1 => "語幹", 2 => "基本形", 3 => "基本連用形"},
25=>{ 1 => "語幹", 2 => "基本形", 3 => "ダ列基本連体形", 4 => "ダ列特殊連体形", 5 => "ダ列基本推量形", 6 => "ダ列基本省略推量形", 7 => "ダ列基本条件形", 8 => "ダ列タ形", 9 => "ダ列タ系推量形", 10 => "ダ列タ系省略推量形", 11 => "ダ列タ系条件形", 12 => "ダ列タ系連用テ形", 13 => "ダ列タ系連用タリ形", 14 => "ダ列タ系連用ジャ形", 15 => "デアル列基本形", 16 => "デアル列命令形", 17 => "デアル列基本推量形", 18 => "デアル列基本省略推量形", 19 => "デアル列基本条件形", 20 => "デアル列基本連用形", 21 => "デアル列タ形", 22 => "デアル列タ系推量形", 23 => "デアル列タ系省略推量形", 24 => "デアル列タ系条件形", 25 => "デアル列タ系連用テ形", 26 => "デアル列タ系連用タリ形", 27 => "デス列基本形", 28 => "デス列基本推量形", 29 => "デス列基本省略推量形", 30 => "デス列タ形", 31 => "デス列タ系推量形", 32 => "デス列タ系省略推量形", 33 => "デス列タ系条件形", 34 => "デス列タ系連用テ形", 35 => "デス列タ系連用タリ形"}, 
26=>{ 1 => "語幹", 2 => "基本形"},
27=>{ 1 => "語幹", 2 => "基本形", 3 => "基本条件形", 4 => "基本連用形", 5 => "基本推量形", 6 => "基本省略推量形", 7 => "タ形", 8 => "タ系条件形", 9 => "タ系連用テ形", 10 => "タ系推量形", 11 => "タ系省略推量形", 12 => "音便基本形", 13 => "音便推量形", 14 => "音便省略推量形", 15 => "文語連体形", 16 => "文語条件形", 17 => "文語音便条件形"},
28=>{ 1 => "語幹", 2 => "基本形", 3 => "ダ列基本省略推量形", 4 => "ダ列基本条件形", 5 => "デアル列基本推量形", 6 => "デアル列基本省略推量形", 7 => "デス列基本推量形", 8 => "デス列基本省略推量形", 9 => "ヤ列基本推量形", 10 => "ヤ列基本省略推量形"}, 
29=>{ 1 => "語幹", 2 => "基本形", 3 => "ダ列タ系連用テ形", 4 => "デアル列基本形", 5 => "デス列基本形"},
30=>{ 1 => "語幹", 2 => "基本形", 3 => "基本連用形", 4 => "文語連体形"},
31=>{ 1 => "語幹", 2 => "基本形", 3 => "未然形", 4 => "意志形", 5 => "省略意志形", 6 => "命令形", 7 => "タ形", 8 => "タ系条件形", 9 => "タ系連用テ形", 10 => "タ系連用タリ形"},
32=>{ 1 => "語幹", 2 => "基本形", 3 => "基本条件形"},
}#}}}

def print_word(sp)
    if(OPTS[:test])
        print "#{sp[0]}_#{sp[3]}:#{sp[4]} "
    elsif(OPTS[:base])
        print "#{sp[2]} "
    else
        print "#{sp[0]}_#{sp[1]}_#{sp[2]}_#{sp[3]}_#{sp[4]}_#{sp[5]}_#{sp[6]} "
    end
end

id = ""
while line = STDIN.gets
    line = line.encode("utf-8","utf-8")

    if(line =~ /^EOS/)
        # 一文出力
        print("# #{id}\n")
        id = ""
    elsif(line =~ /^([^\*\+\#@]|EOS)/ && !(line =~ /^\s*$/ )) #単語なら
        # 品詞変更タグ
        # 0      1        2      3    4 5            6
        # 見通し-みとおし-見通す-動詞-*-子音動詞サ行-基本連用形"
        #
        # # 3文コーパスでは品詞id が入っている
        # 品詞変更:ヘアーメイク-ヘアーメイク-ヘアーメイク-15-2-0-0
        #
        # # 3文コーパスでは，単語の分割を行っている場合がある．> 利用しない
        # ヘアー へあー ヘアー 名詞 6 普通名詞 1 * 0 * 0 "疑似代表表記 代表表記:ヘアーメイク/ヘアーメイク 品詞変更:ヘアーメイク-ヘアーメイク-ヘアーメイク-15-2-0-0" 
        # メイク めいく メイク 名詞 6 サ変名詞 2 * 0 * 0 "疑似代表表記 代表表記:ヘアーメイク/ヘアーメイク 品詞変更:ヘアーメイク-ヘアーメイク-ヘアーメイク-15-2-0-0" 
        #
        # KNP
        # 0      1        2      3    4 5        6 7 8 9 10 "品詞変更:見通し-みとおし-見通す-動詞-*-子音動詞サ行-基本連用形"
        # 見通し みとおし 見通し 名詞 6 普通名詞 1 * 0 * 0 "品詞変更:見通し-みとおし-見通す-動詞-*-子音動詞サ行-基本連用形"
        sp = line.split(/\s/)
        if(OPTS[:poschange] && line =~ /品詞変更:/)
            if(line =~ /[ "]品詞変更:(.*?)[" ]/)
                new_sp = $1.split(/-/)
                if( new_sp[0] == sp[0] && new_sp[3] != "15") # 単語が分割されていない場合
                    if( new_sp[3] =~ /\d/ ) # id の場合(数字が含まれる場合)かつ未定義語でない場合
                        pos = pos_map[new_sp[3].to_i]
                        spos = spos_map[new_sp[3].to_i][new_sp[4].to_i] rescue spos = "*"
                        type = katuyou_type_map[new_sp[5].to_i] rescue type = "*"
                        form = katuyou_form_map[new_sp[5].to_i][new_sp[6].to_i] rescue from = "*"

                        print_word([new_sp[0], new_sp[1],new_sp[2],pos, spos,type,form])
                        #print "#{new_sp[0]}_#{new_sp[1]}_#{new_sp[2]}_#{pos}_#{spos}_#{type}_#{form} "
                        STDERR.puts "#{new_sp.join("-")}"
                        STDERR.puts "#{new_sp[0]}_#{new_sp[1]}_#{new_sp[2]}_#{pos}_#{spos}_#{type}_#{form} "
                    else
                        print_word([new_sp[0], new_sp[1],new_sp[2],new_sp[3], new_sp[4], new_sp[5],new_sp[6]])
                        #print "#{new_sp[0]}_#{new_sp[1]}_#{new_sp[2]}_#{new_sp[3]}_#{new_sp[4]}_#{new_sp[5]}_#{new_sp[6]} "
                    end
                else
                    # 単語を分割している場合は，そのまま使う
                    print_word([sp[0], sp[1],sp[2],sp[3], sp[5], sp[7],sp[9]])
                    #print "#{sp[0]}_#{sp[1]}_#{sp[2]}_#{sp[3]}_#{sp[5]}_#{sp[7]}_#{sp[9]} " 
                end
            end
        else
            if(sp[3] == "未定義語") # 未定義語は訓練データに渡さない
              print_word([sp[0], sp[1], sp[2], "名詞", "普通名詞", "*", "*"])
            else
              print_word([sp[0], sp[1],sp[2],sp[3], sp[5], sp[7],sp[9]])
            end
            #print "#{sp[0]}_#{sp[1]}_#{sp[2]}_#{sp[3]}_#{sp[5]}_#{sp[7]}_#{sp[9]} " 
        end
    elsif(line =~ /^# (S-ID:\S*) /) 
        id = $1
    end
end



